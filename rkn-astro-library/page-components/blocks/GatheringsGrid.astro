---
import { markedHelper } from '../util'
import Grid from '../layout-components/Grid.astro'
const { title, overview, gatherings } = Astro.props
const firstItemSpan = (3 - (gatherings.data.length % 3)).toString()
console.log(Astro.props)
---

<Grid>
  <a class="card" href="/gatherings">
    <div class="inner first">
      <h2>{title}</h2>
      <div class="gatheringDetails" set:html={markedHelper(overview)} />
    </div>
  </a>
  {
    gatherings.data.map((gathering) => (
      <a class="card" href={`/gatherings/${gathering.attributes.slug}`}>
        <div class="inner">
          <h3>{gathering.attributes.title}</h3>
          <div class="details">
            {gathering.attributes.timeSlot && (
              <span class="gathering-detail">
                {gathering.attributes.timeSlot}
              </span>
            )}
            {gathering.attributes.location && (
              <span class="gathering-detail">
                {gathering.attributes.location}
              </span>
            )}
          </div>
          <p>{gathering.attributes.oneLiner}</p>
        </div>
      </a>
    ))
  }
</Grid>
<style define:vars={{ firstItemSpan }}>
  div.inner {
    background: var(--light);
    padding: 2.5rem 25px 1.2rem 25px;
    height: 100%;
  }
  :global(div.gatheringDetails *) {
    font-size: var(--font-size-hero-p);
  }
  div.inner * {
    color: var(--gunmetal);
  }
  div.first {
    grid-column: span var(--firstItemSpan);
    background: var(--primaryColor);
  }
  div.first * {
    color: white;
  }
  .gathering-detail:not(:last-of-type)::after {
    content: '|';
  }
  div.details {
    margin-top: 0.2rem;
  }
  .gathering-detail {
    font-size: var(--font-size-h5);
    font-family: var(--italic);
  }
  div.inner h3 {
    color: var(--primaryColor);
  }
  h2 {
    font-size: calc(36rem / 16);
  }
  h2,
  h3 {
    margin-top: 0;
    line-height: 110%;
  }
  a.card {
    text-decoration: none;
    color: inherit;
    height: 100%;
    transition: 0.25s;
    grid-column: span 2;
  }
</style>

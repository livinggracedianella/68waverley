---
import { markedHelper } from '../util'
import Grid from '../layout-components/Grid.astro'
const { title, overview, gatherings } = Astro.props
const firstItemSpan = (3 - (gatherings.data.length % 3)).toString()
---

<Grid>
  <a class="card" href="/gatherings">
    <div class="inner first">
      <h2>{title}</h2>
      <div set:html={markedHelper(overview)} />
    </div>
  </a>
  {
    gatherings.data.map((gathering) => (
      <a class="card" href={`/gatherings/${gathering.attributes.slug}`}>
        <div class="inner">
          <h3>{gathering.attributes.title}</h3>
          <h4>
            {gathering.attributes.time_slot && (
              <span class="gathering-detail">
                {gathering.attributes.time_slot}
              </span>
            )}
            {gathering.attributes.location && (
              <span class="gathering-detail">
                {gathering.attributes.location}
              </span>
            )}
          </h4>
          <p>{gathering.attributes.one_liner}</p>
        </div>
      </a>
    ))
  }
</Grid>
<style define:vars={{ firstItemSpan }}>
  div.inner {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-start;
    background: var(--light);
    padding: 20px;
    height: 100%;
  }
  div.first {
    grid-column: span var(--firstItemSpan);
  }
  .gathering-detail:not(:last-of-type)::after {
    content: '|';
  }
  h4 {
    font-family: var(--italic);
  }
  h2,
  h3 {
    margin-top: 0;
  }
  a.card {
    text-decoration: none;
    color: inherit;
    height: 100%;
    transition: 0.25s;
    grid-column: span 2;
  }
  /*  a.card:hover,
  a.card:focus {
    transform: scale(102%);
  }*/
</style>

---
import {
  strapiAsset,
  markedHelper,
  Grid,
  GridFeatureCard,
  GridCard,
} from '@rkn/page-components'
const { title, overview, gatherings, cardImage } = Astro.props
const imageUrl = `url(${strapiAsset(
  cardImage?.data?.attributes?.formats?.small?.url ??
    '/uploads/small_Alpha_Lifeshared_CANADA_18_4_1905609_tomgphoto_be076bc705.jpg'
)})`
---

<Grid>
  <GridFeatureCard
    length={gatherings.data.length}
    cardImage={cardImage}
    title={title}
    overview={overview}
  />
  {
    gatherings.data.map((gathering) => (
      <GridCard>
        <div class="inner">
          <h3>
            <a class="click" href={`/gatherings/${gathering.attributes.slug}`}>
              {gathering.attributes.title}
            </a>
          </h3>
          <div class="details">
            {gathering.attributes.timeSlot && (
              <span class="gathering-detail">
                {gathering.attributes.timeSlot}
              </span>
            )}
            {gathering.attributes.location && (
              <span class="gathering-detail">
                {gathering.attributes.location}
              </span>
            )}
          </div>
          <div set:html={markedHelper(gathering.attributes.oneLiner)} />
        </div>
      </GridCard>
    ))
  }
</Grid>
<style define:vars={{ imageUrl }}>
  :root {
    --grid-card-padding: 2.5rem 25px 2rem 25px;
  }
  div.inner {
    background: var(--light);
    padding: var(--grid-card-padding);
    height: 100%;
  }
  :global(div.gatheringDetails *) {
    font-size: var(--font-size-hero-p);
  }
  div.inner * {
    color: var(--gunmetal);
  }
  div.inner a {
    color: var(--primary-color);
  }
  .gathering-detail:not(:last-of-type)::after {
    content: '|';
  }
  div.details {
    margin-top: 0.2rem;
  }
  .gathering-detail {
    font-size: var(--font-size-h5);
    font-family: var(--italic);
  }
  div.inner h3 a {
    color: var(--primary-color);
  }
  div.inner p {
    line-height: 140%;
  }
  h2 {
    font-size: calc(36rem / 16);
  }
  h2,
  h3 {
    margin-top: 0;
    line-height: 110%;
  }
  li.card {
    color: inherit;
    height: 100%;
    transition: 0.25s;
    grid-column: span 2;
  }
</style>

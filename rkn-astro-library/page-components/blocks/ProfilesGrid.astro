---
const { title, overview, profiles } = Astro.props
const firstItemSpan = (3 - (profiles.data.length % 3)).toString()
---

<div class="grid-wrapper">
  <div class="inner first">
    <a id={title.toLowerCase().split(" ").join("-")}></a>
    <h2>{title}</h2>
    {overview}
  </div>
  {
    profiles.data.map((profile) => (
      <div class="inner">
        <h3>{profile.attributes.name}</h3>
        <h4>
          {profile.attributes.title && (
            <span class="profile-detail">
              {profile.attributes.title}
            </span>
          )}
        </h4>
        <p>{profile.attributes.bio_short}</p>
        <a class="cta" href={`/profiles/${profile.attributes.slug}`}>
          Find out more
        </a>
      </div>
    ))
  }
</div>
<style define:vars={{ firstItemSpan }}>
  div.grid-wrapper {
    display: grid;
    gap: 10px;
    grid-template-columns: 1fr 1fr 1fr;
    padding: 20px 40px;
    width: 100vw;
    background: #f1f1f1;
  }
  div.inner {
    border-radius: 10px;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-start;
    background: #ffffff;
    padding: 20px;
    box-shadow: 1px 1px 1px #51534a;
  }
  div.first {
    grid-column: span var(--firstItemSpan);
  }
  .profile-detail:not(:last-of-type)::after {
    content: '|';
  }
  h4 {
    font-family: var(--italic);
  }
  .cta {
    margin-top: auto;
  }
  h2,
  h3 {
    margin-top: 0;
  }
  @media (max-width: 1024px) {
    div.grid-wrapper {
      grid-template-columns: 1fr 1fr;
    }
  }
  @media (max-width: 640px) {
    div.grid-wrapper {
      grid-template-columns: 1fr;
    }
  }
</style>

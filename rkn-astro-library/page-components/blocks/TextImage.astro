---
//formerly two-column
import { markedHelper } from '../util.js'
import { strapiAsset } from '@rkn/page-components'
const props = Astro.props
console.log(props)
const img = props.image.data.attributes
const imgURL = strapiAsset(
  img.formats?.medium?.url ??
    img.formats?.small?.url ??
    img.formats.thumbnail.url
)
let flexDirection = 'row-reverse'
if (props.imageSide === 'right') {
  flexDirection = 'row'
}
const { imageVerticalAlignment, imageHorizontalAlignment } = props
---

<div class="container">
  <div class="item">
    <div class="inner">
      <div>
        <h2>{props.title ?? ''}</h2>
        <div
          set:html={markedHelper(
            props.text ?? 'Here is some placeholder text.'
          )}
        />
      </div>
    </div>
  </div>
  <div class="item image" style={`background-image: url("${imgURL}")`}>
    <img src={imgURL} alt={img.alternativeText} class="sr-only" />
  </div>
</div>

<style
  define:vars={{
    flexDirection,
    imageVerticalAlignment,
    imageHorizontalAlignment,
  }}
>
  div.container {
    display: flex;
    flex-direction: var(--flexDirection);
    height: fit-content;
    width: 100vw;
    background: #702082;
  }
  div.container * {
    color: white;
  }
  div.item {
    width: 50vw;
    min-height: max(200px, 40vh);
  }
  div.inner {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    padding: 50px;
  }
  h2 {
    margin-top: 0;
  }
  div.image {
    background-position: var(--imageVerticalAlignment)
      var(--imageHorizontalAlignment);
    background-repeat: no-repeat;
    background-size: cover;
    justify-self: flex-end;
  }
  @media (max-width: 640px) {
    div.container {
      flex-direction: column;
    }
    div.item {
      width: 100vw;
      flex-grow: 0;
    }
  }
  @media (min-width: 1024px) {
    div.image {
      max-width: 34vw;
    }
    div.inner,
    div.item {
      width: 66vw;
    }
  }
</style>

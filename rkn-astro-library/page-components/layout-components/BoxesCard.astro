---
import { strapiAsset, markedHelper } from '../util'
const width = 234
const height = 156
const imageUri =
  Astro.props.imageUri ?? '/uploads/small_Michael_Living_Grace_10c3d24f38.jpg'
const image = strapiAsset(imageUri)
const imageUrl = `url(${image})`
const alternativeText = 'default alternative text'
const description =
  Astro.props.description ??
  `Placeholder text. You are welcome, whatever your age,
culture or gender.`
---

<div class="boxes-card container">
  <div class="details">
    <slot />
  </div>
  <div
    class="description"
    set:html={markedHelper(description) + '<p class="cta">Find out more</p>'}
  />
  <div class="image"></div>
</div>
<style define:vars={{ imageUrl }}>
  div {
    width: 100%;
  }
  div.container {
    display: grid;
    grid-template-columns: minmax(250px, 3fr) 10px 4fr;
    grid-template-rows: 20px 1fr 10px 3fr 20px;
    min-height: 30vh;
    height: 100%;
  }
  .boxes-card:hover,
  .boxes-card:focus {
    transform: scale(101%);
    transition: 0.25s;
    cursor: pointer;
  }
  div.details {
    background: var(--primary-color);
    grid-column: 1 / 3;
    grid-row: 1 / 3;
    z-index: 1;
    padding: 10px;
  }
  div.description {
    background: white;
    grid-column: 2/-1;
    grid-row: 2/-2;
    padding: 5px 10px 15px 25px;
    color: var(--gunmetal);
  }
  :global(div.description *:first-child) {
    font-size: var(--font-size-hero-p);
  }
  :global(div.description .cta) {
    color: var(--primary-color);
    font-family: var(--bold);
  }
  div.image {
    grid-column: 1 / 3;
    grid-row: 4 / -1;
    background-image: var(--imageUrl);
    background-size: cover;
    background-position: center;
  }
  img {
    width: auto;
    height: 100%;
  }
  @media (max-width: 1280px) and (min-width: 917px), (max-width: 700px) {
    div.container {
      grid-template-columns: 20px 2fr 10px 1fr 20px;
      grid-template-rows: calc(100rem / 16) 40px auto;
    }
    div.image {
      grid-column: 4/-1;
      grid-row: 1 / 3;
    }
    div.description {
      grid-column: 2 / -2;
      grid-row: 2 / -1;
      padding: 35px 10px 15px 15px;
    }
  }
  @media (max-width: 450px) {
    div.container {
      grid-template-columns: 1fr;
      grid-template-rows: minmax(100px, auto) 200px auto;
    }
    div.details {
      grid-column: 1 / -1;
      grid-row: 1;
    }
    div.image {
      grid-column: 1 / 1;
      grid-row: 2;
    }
    div.description {
      grid-column: 1 / -1;
      grid-row: 3;
      padding: 0px 10px 10px 15px;
    }
  }
</style>
<script>
  document.querySelectorAll('.boxes-card').forEach((card) => {
    card.addEventListener('click', (e) => {
      // If the thing they clicked is already a link, do nothing, let their link click go through.
      if (e.target.nodeName === 'A') {
        return
      }
      card.querySelector('.click')?.click()
    })
  })
</script>

---
const { textLogo, logoAltText } = Astro.props;
import { fetchPageData } from '../page-components/util.js';
const site = import.meta.env.THIS_SITE
const navDetails = await fetchPageData(`/api/menu-entries?filters[key][$eq]=${site}.header-menu&populate[menu_items][populate][0]=sub_menu_links`);
const menuItems = navDetails.data[0].attributes.menu_items
---
<header class="header-wrapper">
    <a href="/">
        <img src={textLogo} alt={logoAltText} />
    </a>
    <nav class="headerNav">
        <ul>
            {menuItems.map(menuItem => {
                if (menuItem.sub_menu_links) {
                    return (<ul class="dropdown">
                    <li class="menu-item dropdown-toggle"><a href={menuItem.url_path}>{menuItem.name}</a></li>
                    {menuItem.sub_menu_links.map(sml => {
                    return (<li class="sub-menu-item"><a href={sml.url_path}>{sml.name}</a></li>)
                    })}
                    </ul>)
                    
                }
                return <li><a href={menuItem.url_path}>{menuItem.name}</a></li>
            })}  
        </ul>
    </nav>
    <button type="button" class="headerNavToggle hamburger">
        <div></div>
        <div></div>
        <div></div>
    </button>
</header>
<div id="header-trigger"></div>
<pre>{JSON.stringify(menuItems, null, 2)}</pre>
<style>
    /*WRAPPER STYLES*/
    :root {
        --header-height: calc(100rem / 16);
    }

    header {
        height: var(--header-height);
        background-color: var(--banner-color);
        position: fixed;
        width: 100%;
        transition: 0.25s;
        opacity: 0.8;
        display: flex;
        z-index: 10;
    }
    #header-trigger {
        height: var(--header-height);
        transition: 0.25s;
        width: 100%;
    }

    .scrolled {
        opacity: 1;
    }
    /*LOGO STYLES*/
    img {
            height: var(--header-height);
            transition: 0.25s;
            padding-left: max(20px, 2vw);
        }
        @media (max-width: 916px) {
            img {
                height: var(--header-height);
                padding: 0.5rem 0;
                padding-left: 1vw;
            }
        }
    /*Nav Styles*/
    nav {
        margin: 0 auto;
        display: flex;
        padding-right: 3vw;
        align-items: center;
        transition: 0.25s;
        align-self: start;
        position: relative;
        top: clamp(10px, -25px + (var(--header-height) / 2), 25px);
    }
    /*GENERAL LIST AND BUTTON STYLES*/
    ul {
        display: flex;
        font-size: var(--font-size-h5);
        list-style: none;
    }
    @media (max-width: 916px) {
        nav {
            position: absolute;
            top: var(--header-height);
            width: 100%;
            background-color: var(--banner-color);
            padding-left: 0;
            flex-direction: column;
            display: none;
        }
        nav.hidden {
            display: flex;
        }
        ul {
            flex-direction: column;
            padding-bottom: 10px;
            align-items: center;
        }
    }
    /*MENU LIST ITEM STYLES*/
    li.menu-item {
        display: flex;
        align-items: center;
        max-height: 50px;
        padding-right: 20px;
        flex-shrink: 0;
    }
    @media (min-width: 917px) {
        /* insert '|' spaced in between nav items */
        li.menu-item:not(:first-of-type):before {
            padding-right: 20px;
            content: "|";
            color: white;
            z-index: 1;
        }
        li.menu-item:last-of-type {
            padding-right: 20px;
        }
    }
    @media (max-width: 916px) {
        li.menu-item {
            padding: 10px 0;
        }
    }
    li.sub-menu-item {
        display: flex;
        align-items: center;
        flex-shrink: 0;
        flex-grow: 1;
        flex-direction: column;
        position: relative;
    }
    ul.dropdown {
        flex-direction: column;
        background-color: var(--banner-color);
        position: relative;
        transition: 0.25s;
        width: 100%;
    }
    ul.dropdown:hover {
        display: flex;
    }
    /*Button Styling*/
    /*li.dropdown-toggle {
        color: white;
        font-size: 10px;
        display: inline-block;
        transform: rotate(90deg);
        position: relative;
        bottom: 3px;
        left: 3px;
        transition: 0.25s;
    }
    li.dropdown-toggle:hover {
        transform: rotate(-90deg);
        transition: 0.25s;
    }*/
    @media (min-width: 917px) {
        li.sub-menu-item {
            flex-basis: 50px;
            align-self: flex-start;
        }
        ul.dropdown {
            top: clamp(10px, -25px + (var(--header-height) / 2), 25px);
            align-items: center;
        }
    }
    @media (max-width: 916px) {
        li.dropdown-toggle {
            padding: 10px 0;
        }
        ul.dropdown {
            padding-left: 40%;
        }
    }
    /*HAMBURGER AND RESPONSIVE DROPDOWN STYLES*/
    .headerNavToggle {
        display: none;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        background-color: var(--banner-color);
        border: 0px;
        transition: 0.25s;
        cursor: pointer;
        font-size: 9px;
    }

    .headerNavToggle div {
        background-color: #fff;
        height: 0.4em;
        transition: 0.4s;
        flex-shrink: 0;
        flex-grow: 0;
    }

    .headerNavToggle.hamburger div {
        width: 3.5em;
        margin: 0.3em 0.1em 0.3em 0;
        border-radius: 10px;
    }
    button {
        align-self: center;
        padding-right: max(20px, 2vw);
        width: auto;
    }
    .toggled div:nth-of-type(1) {
        border-radius: 10px;
        transform: rotate(45deg);
        position: relative;
        top: 0.85em;
    }

    .toggled div:nth-of-type(2) {
        width: 3.1em;
        margin: 0.15em 0.4em 0.15em 0;
        border-radius: 10px;
        transform: rotate(405deg);
        opacity: 0;
    }

    .toggled div:nth-of-type(3) {
        border-radius: 10px;
        transform: rotate(-45deg);
        position: relative;
        bottom: 0.85em;
    }
    @media (max-width: 916px) {
        .headerNavToggle {
            display: flex;
            margin-left: auto;
        }
    }
</style>
<script>
    const headerNavToggle = document.querySelector(".headerNavToggle");
    const headerNav = document.querySelector(".headerNav");
    headerNavToggle.addEventListener("click", () => {
        headerNav.classList.toggle("hidden");
        headerNavToggle.classList.toggle("toggled");
    });
</script>

<script>
    const html = document.documentElement;
    const headerTrigger = document.querySelector("#header-trigger");
    const headerHeightInit = html.style.getPropertyValue("--header-height");
    const headerWrapper = document.querySelector(".header-wrapper");
    let options = {
        root: null,
        rootMargin: "0px",
        threshold: 1,
    };
    const obsCallback = (entries) => {
        entries.forEach((entry) => {
            if (!entry.isIntersecting) {
                html.style.setProperty("--header-height", "calc(70rem / 16)");
                headerWrapper.classList.add("scrolled");
            } else {
                html.style.setProperty("--header-height", headerHeightInit);
                headerWrapper.classList.remove("scrolled");
            }
        });
    };

    let headerObserver = new IntersectionObserver(obsCallback, options);
    headerObserver.observe(headerTrigger);
</script>

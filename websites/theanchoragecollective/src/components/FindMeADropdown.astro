---
const { buttonName } = Astro.props
import FindMeADropdownItem from '../components/FindMeADropdownItem.astro'
---

<div class="FindMeADropdownWrapper_Outer">
  <div class="FindMeADropdownWrapper_Inner">
    <button
      type="button"
      class="FindMeADropdownButton"
      aria-haspopup="true"
      aria-expanded="false"
      >{buttonName}
      <span>‚ùØ</span>
    </button>
    <ul>
      <FindMeADropdownItem itemhref="/find-me-a/trainer" itemName="Trainer" />
      <FindMeADropdownItem
        itemhref="/find-me-a/supervisor"
        itemName="Supervisor"
      />
      <FindMeADropdownItem
        itemhref="/find-me-a/spiritual%20director"
        itemName="Spiritual Director"
      />
      <FindMeADropdownItem itemhref="/find-me-a/mentor" itemName="Mentor" />

      <FindMeADropdownItem itemhref="/find-me-a/coach" itemName="Coach" />
      <FindMeADropdownItem
        itemhref="/find-me-a/counsellor"
        itemName="Counsellor"
      />
    </ul>
  </div>
</div>

<style>
  div.FindMeADropdownWrapper_Outer {
    position: relative;
    margin: 0 auto;
    font-size: 16px;
    width: 33vw;
    height: 4rem;
    padding-bottom: 4rem;
  }
  div.FindMeADropdownWrapper_Inner {
    position: absolute;
    z-index: 2;
    width: 33vw;
    height: 4rem;
  }
  li {
    display: flex;
    align-items: center;
    flex-shrink: 0;
    flex-grow: 1;
    flex-direction: column;
    position: relative;
  }
  ul {
    flex-direction: column;
    background-color: white;
    border: solid 1px var(--gunmetal);
    position: relative;
    transition: 0.25s;
    display: none;
    width: 100%;
    border-radius: 4px;
  }
  ul.show {
    display: flex;
  }
  /*Button Styling*/
  button {
    display: inline-block;
    border: solid 1px var(--gunmetal);
    text-decoration: none;
    font-size: 1.4rem;
    cursor: pointer;
    text-align: center;
    background-color: white;
    width: 100%;
    height: 4rem;
    color: var(--gunmetal);
    text-align: left;
    border-radius: 4px;
  }
  button:hover,
  button:focus {
    background-color: var(--gunmetal-tint);
    color: black;
  }
  span {
    color: var(--gunmetal);
    font-size: 14px;
    display: inline-block;
    transform: rotate(90deg);
    position: absolute;
    right: 1.5rem;
    transition: 0.25s;
  }
  span.toggled {
    transform: rotate(-90deg);
    transition: 0.25s;
  }
  li {
    flex-basis: 50px;
    align-self: flex-start;
  }
  ul {
    align-items: center;
  }
  button {
    padding: 0px 20px 0px 20px;
    flex-basis: 50px;
  }
  @media (max-width: 916px) {
    div.FindMeADropdownWrapper_Outer,
    div.FindMeADropdownWrapper_Inner {
      width: 50vw;
      flex-basis: 40px;
    }
  }
</style>
<script>
  const FindMeAButtons = document.querySelectorAll('.FindMeADropdownButton')
  const toggleDropdown = (event) => {
    // @ts-ignore
    event.currentTarget.nextElementSibling.classList.toggle('show')
    // @ts-ignore
    event.currentTarget.firstElementChild.classList.toggle('toggled')
    let expanded = event.currentTarget.getAttribute('aria-expanded')
    if (expanded === 'true') {
      event.currentTarget.setAttribute('aria-expanded', 'false')
    } else {
      event.currentTarget.setAttribute('aria-expanded', 'true')
    }
  }
  FindMeAButtons.forEach((button) => {
    button.addEventListener('click', (event) => {
      console.log('button clicked')
      if (
        // @ts-ignore
        event.currentTarget.nextElementSibling.classList.contains('show')
      ) {
        toggleDropdown(event)
      } else {
        let showing = document.querySelector('ul.show')
        if (showing) {
          showing.classList.remove('show')
          showing.previousElementSibling.firstElementChild.classList.remove(
            'toggled'
          )
        }
        toggleDropdown(event)
      }
    })
  })
</script>

---
import { formatDistance, format } from "date-fns";
import { marked } from "marked";
marked.use({ mangle: false, headerIds: false, headerPrefix: false });

import Grid from "./Grid.astro";

export interface Props {
  post: object;
}

const { post } = Astro.props;
const {
  attributes: {
    title,
    one_liner,
    summary,
    body,
    date,
    background,
    services: { data: services },
  },
} = post || {};
const {
  attributes: {
    providers: { data: providers },
  },
} = post || {};
const paragraphs = marked.lexer(body).filter((t) => t.type !== "space");
const spans = ["middle", "rightmiddle"];

const randomSpan = () => {
  const spanIndex = Math.floor(Math.random() * spans.length);
  return spans[spanIndex];
};

const itemClasses = (itemIndex) => {
  let classes;
  if (itemIndex === 0) {
    classes = "column-2-4 highlight first-paragraph";
  } else {
    classes = randomSpan();
  }
  return classes;
};

// const serviceStyles = (service) => {return `border: 1px solid #999999; background-color: ${service.background}`};

const serviceStyles = (service) => {
  return `border: 1px solid #999999;
    margin: 0px 4px;
    font-weight:bold;
    border-top-left-radius:4px;
    border-top-right-radius:4px;
    border-bottom-left-radius:4px;
    border-bottom-right-radius:4px;
    box-shadow: 0px 1px 0px 0px #fff6af;
    background-color: ${service.background}`;
};
---

<script type="text/javascript">
window.addEventListener("DOMContentLoaded", (event) => {
  const buttons = document.querySelectorAll("button.service-button");
  buttons.forEach((button) => {
    button.addEventListener("click", () => {
      location.href = `/service/${button.dataset.name}`;
    });
  });
});
</script>

<div style="position: relative">
  <div class="rounded-md h-56 w-full overflow-hidden">
    <img
      className="object-cover w-full h-full"
      style="width: 100%;"
      src={// featuredImage
      //    ? `http://localhost:1337${featuredImage.url}`
      //    : 'https://via.placeholder.com/1080'
      // 'https://dummyimage.com/1080x180/dddddd/111111&text=banner+image'
      "/images/whites-beach-2048x827.jpg"}
    />
  </div>
  <Grid class="layout-2-1-1-2">
    <p class="mockup column-1"></p>
    <p class="mockup column-2"></p>
    <p class="mockup column-3"></p>
    <p class="mockup column-4"></p>
    <div class="head-matter column-all row-1">
      <h1>{title}</h1>
      <div class="one-liner">{one_liner}</div>
      <div>
        <span class="article-date">{format(new Date(date), "do LLL yyyy")}</span>
      </div>
      <div>
        {
          services.map(({ attributes: service }, index) => (
            <button
              class="service-button"
              data-name={service.name}
              type="button"
              style={serviceStyles(service)}
            >
              {service.name}
            </button>
          ))
        }
      </div>
    </div>
    <div class="head-matter column-1 row-2">
      <!-- <div class="summary column-1">{summary}</div> -->
      {
        providers.map(({ attributes: provider }, index) => {
          const {
            data: [
              {
                attributes: { url },
              },
            ],
          } = provider?.portrait || {};
          const imageUrl = url
            ? `http://localhost:1337${url}`
            : "https://via.placeholder.com/120";
          return (
            <>
              <div class="author">
                <img class="author-image" src={imageUrl} alt="Author Photo" />
                <div class="author-details">
                  <div class="author-name">
                    {provider.name}
                    <span class="desktop">
                      ,<br />
                    </span>
                  </div>
                  <div class="author-title">{provider.title}</div>
                </div>
              </div>
              <div class="author-bio">{provider.bio_short}</div>
            </>
          );
        })
      }
    </div>
    {
      paragraphs && paragraphs.length > 0
        ? paragraphs.map((paragraph, index) => (
            <div
              set:html={marked.parse(paragraph.text)}
              class={`${itemClasses(index)}`}
            ></div>
          ))
        : "No posts found"
    }
  </Grid>
</div>

<style>
  .highlight {
    font-family: magallanescondregular-italic;
    font-weight: 600;
    /* letter-spacing: 0.03rem; */
    font-size: 120%;
  }

  .head-matter {
    text-align: center;
    font-family: Magallanes;
  }

  h1 {
    font-weight: 800;
    color: #555;
    margin: 12px 0 4px 0;
  }

  .one-liner {
    border-top: 1px #aaa solid;
    padding: 8px 0px 0px 0px;
    margin: 4px 0px 0px 0px;
    font-size: 110%;
    font-style: italic;
    font-weight: 500;
    line-height: 0.98;
    color: #333;
  }

  .article-date {
    margin: 0px 0px 4px 0px;
    font-size: 70%;
  }

  .summary {
    color: #c64;
    font-size: 130%;
    font-weight: 600;
  }

  .author {
    display: flex;
    text-align: left;
    padding: 2px;
    background-color: #f0e0f8;
  }

  .author-bio {
    color: #555;
    font-size: 75%;
    font-weight: 500;
    /* border: 1px solid #666; */
    padding: 4px 0px 12px 0px;
    background-color: #f0f4f0;
    display: none;
  }

  .author-name {
    font-size: 120%;
    font-weight: 600;
    text-align: start;
    line-height: 1.5rem;
    padding: 0px 0px 4px 4px;
    margin: 0;
    display: block;
  }

  .author-title {
    font-size: 120%;
    font-weight: 400;
    line-height: 1.1rem;
    text-align: start;
    flex: 1 1 auto;
    padding: 0px 4px 0px 4px;
    display: inline;
  }

  .author-image {
    width: 12%;
  }

  .mockup {
    grid-row-start: 1;
  }

  .desktop {
    display: none;
  }

  @media screen and (min-width: 48em) {
    .desktop {
      display: inline;
    }

    .head-matter {
      align-items: center;
    }

    .one-liner {
      width: 56%;
      margin: auto;
    }

    .author {
      padding: 2px;
    }

    .author-bio {
      display: block;
    }

    .author-details {
      display: block;
    }

    .author-name {
      font-size: 125%;
      font-weight: 700;
      font-size: 125%;
      text-align: start;
      line-height: 1rem;
      padding: 0px 4px;
      margin: 0;
    }

    .author-title {
      font-weight: 400;
      text-align: start;
      flex: 1 1 auto;
      line-height: 1rem;
      padding: 0px 4px;
    }

    .author-image {
      width: min(150px, 30%);
      padding: 1px;
    }

    .first-paragraph {
      grid-row: 2;
    }
  }
</style>

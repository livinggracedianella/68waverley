---
import { BaseLayout } from '@rkn/base-components'
import {
  Header,
  Button,
  strapiAsset,
  fetchFilterPopulate,
  markedHelper,
} from '@rkn/page-components'

export async function getStaticPaths() {
  const pages = await fetch(
    `${import.meta.env.STRAPI_HOST}/api/events?filters[websites][key][$eq]=${
      import.meta.env.THIS_SITE
    }`
  ).then((res) => res.json())
  return pages.data.map((page) => ({ params: { page: page.attributes.slug } }))
}
const { page } = Astro.params

const pageData = await fetchFilterPopulate(`/api/events`, page, [
  'header.headerImage',
  'featureImage',
])

const event = pageData.data[0].attributes
const header = event.header
const featureImage = event.featureImage
---

<BaseLayout title={event.title}>
  <article class="outer">
    <Header {...header} subtitle={event.oneLiner} />
    <div class="inner">
      <dl class="details">
        <dt>When</dt>
        <dd>{event.date} {event.time}</dd>
        <dt>Where</dt>
        <dd>{event.venue}</dd>
        <dt>Cost</dt>
        <dd>{event.cost}</dd>
      </dl>
      <div set:html={markedHelper(event.shortDescription)} />
      <div class="call-to-action">
        {
          event.contact && (
            <Button
              href={'mailto:' + event.contact}
              label={'Email ' + event.contact}
            />
          )
        }
        {event.register && <Button
          href={event.register}
          label="Register"
        />}
      </div>
    </div>
  </article>
</BaseLayout>
<style>
  div.outer {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
  div.inner {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    max-width: 700px;
    flex-grow: 0;
    text-wrap: wrap;
  }
  div.flex-row {
    display: flex;
    gap: 50px;
    justify-content: center;
  }
  section {
    max-width: 700px;
  }
</style>


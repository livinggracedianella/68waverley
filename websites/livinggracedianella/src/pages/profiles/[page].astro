---
import { BaseLayout } from '@rkn/base-components'
import {
  Header,
  strapiAsset,
  markedHelper,
  fetchFilterPopulate,
  TwoColumn,
  TwoColumnImageDiv,
  Grid,
  GridFeatureCard,
  fetchPopulate,
  GridImageDiv,
} from '@rkn/page-components'

export async function getStaticPaths() {
  const pages = await fetch(
    `${import.meta.env.STRAPI_HOST}/api/profiles?filters[websites][key][$eq]=${
      import.meta.env.THIS_SITE
    }`
  ).then((res) => res.json())
  return pages.data.map((page) => ({ params: { page: page.attributes.slug } }))
}

const { page } = Astro.params
const pageData = await fetchFilterPopulate(`/api/profiles`, page, [
  'header.headerImage',
  'portrait',
])

const provider = pageData.data[0].attributes
const header = provider.header
const portrait = provider.portrait

let { url } = portrait.data.attributes.formats.medium

const profiles = await fetchPopulate('/api/profiles', ['portrait'])
---

<BaseLayout title={provider.name}>
  <div class="outer">
    <Header {...header} headerTitle={provider.name} subtitle={provider.title} />
    <TwoColumn columnReverse="true">
      <div class="ProfileTextContainer">
        <article set:html={markedHelper(provider.bio)} />
      </div>
      <div class="sidePanel" slot="second">
        <div class="imageContainer">
          <TwoColumnImageDiv image={portrait} />
        </div>
        <a class="cta" href=`mailto:${provider.email}`>{provider.email}</a>
      </div>
    </TwoColumn>
    <Grid>
      <GridFeatureCard
        title="More People"
        overview="Who else would you like to meet?"
        length={(profiles.data.length - 1)}
        href="/about-us#our-people"
      />
      {
        profiles.data.map((profile) => {
          let bio = profile.attributes.bio
          if (profile.attributes.name === provider.name) {return}
          return (
            <a class="card" href={`/profiles/${profile.attributes.slug}`} class="card">
              <div class="inner">
                <div class="textContainer">
                  <h3>{profile.attributes.name}</h3>
                  <h4>
                    {profile.attributes.title && (
                      <span class="profile-detail">{profile.attributes.title}</span>
                    )}
                  </h4>
                  <p class="bio">
                    {bio.length >= 100 && `${bio.substring(0, 100)}...`}
                    {bio.length < 100 && `${bio}`}
                  </p>
                </div>
                <div class="imageContainer">
                  <GridImageDiv image={profile.attributes.portrait} />
                </div>
              </div>
            </a>
          )
        })
      }
    </Grid>
  </div>
  <style>
    div.outer {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
    }
    div.imageContainer {
      height: 100%;
      max-height: max(40vh, 250px);
    }
    div.sidePanel {
      background-color: var(--primary-color);
      height: 100%;
      display: flex;
      flex-direction: column;
    }
    a.cta {
      color: white;
      padding: 20px;
      display: block;
    }
    div.ProfileTextContainer {
      max-width: 700px;
      margin: 40px auto;
      padding: 0 50px;
    }
    :global(div.ProfileTextContainer :is(p, a)) {
      color: var(--gunmetal);
    }
    :global(div.ProfileTextContainer :is(h3, h4)) {
      color: var(--primary-color);
    }
    :global(div.ProfileTextContainer p:first-of-type:first-line) {
      color: var(--primary-color);
      font-size: var(--font-size-hero-p);
    }
    @media (max-width: 750px) {
      div.imageContainer {
        height: 300px;
      }
    }

    /*Styles copied from profiles Grid*/
    a.card {
    grid-column: span 2;
    text-decoration: none;
    color: var(--gunmetal);
    background: var(--light);
  }
  a.card div.inner {
    display: grid;
    grid-template-columns: 3fr 2fr;
    grid-column: span 2;
  }
  a.card div.textContainer {
    padding: 20px;
  }
  @media (max-width: 900px) {
    a.card div.textContainer {
      padding: 10px;
    }
    a.card h3 {
      font-size: var(--font-size-h4);
    }
    a.card h4 {
      font-size: var(--font-size-h5);
    }
  }
  a.card .profile-detail:not(:last-of-type)::after {
    content: '|';
  }
  a.card h4 {
    font-family: var(--italic);
    margin-top: 0;
  }
  a.card h2,
  a.card h3 {
    margin-top: 0;
  }
  a.card h3 {
    color: var(--primary-color);
  }
  a.card .imageContainer {
    height: 100%;
  }
  @media (max-width: 420px) {
    a.card p.bio {
      display: none;
    }
  }
  </style>
</BaseLayout>

---
import { BaseLayout } from '@rkn/base-components'
import {
  Header,
  fetchPageData,
  markedHelper,
  BlockRenderer,
  Message,
  Grid,
  parseDate,
} from '@rkn/page-components'
//deliberately not filtered by site as all messages should be applicable to living grace.
const data = await fetchPageData('/api/pages', {
  filters: {
    slug: {
      $eq: 'messages',
    },
  },
  populate: [
    'header.headerImage',
    'blocks.message',
    'blocks.message.soundcloudRecording',
    'blocks.message.profiles',
  ],
})

const pageData = data.data[0].attributes
const blocks = pageData.blocks
const header = pageData.header

const { data: messages } = await fetchPageData('/api/sermons', {
  populate: ['profiles'],
})
---

<BaseLayout title="Messages">
  <div class="outer">
    <Header {...header} />
    <BlockRenderer blocks={blocks} />
    <h2 class="recent-header" id="recent">Recent messages</h2>
    <Grid>
      {
        messages.map((message) => {
          const { title, date, slug, oneLiner, profiles } = message.attributes
          const messageUrl = `/messages/${slug}`
          const profileNames = profiles.data
            .map((p) => p.attributes.name.split(' ').join('\u00A0'))
            .join(',')
          return (
          <a class="card" href={messageUrl}>
        <div class="inner">
          <h3>{title}</h3>
          <div class="details">
            <span class="gathering-detail">{parseDate(date)}</span>
            <span class="gathering-detail">{profileNames}</span>
          </div>
          <p>{oneLiner}</p>
        </div>
      </a>
          )
        })
      }
    </Grid>
  </div>
</BaseLayout>
<style>
  :root {
    --grid-card-padding: 2.5rem 25px 2rem 25px;
  }
  .recent-header {
    color: var(--primary-color);
    font-size: var(--font-size-h3);
    line-height: var(--line-height-h3);
    margin: 2rem 0;
    text-align: center;
  }
  div.inner {
    background: var(--light);
    padding: var(--grid-card-padding);
    height: 100%;
  }
  div.inner * {
    color: var(--gunmetal);
  }
  .gathering-detail:not(:last-of-type)::after {
    content: ' | ';
  }
  div.details {
    margin-top: 0.2rem;
  }
  .gathering-detail {
    font-size: var(--font-size-h5);
    font-family: var(--italic);
  }
  div.inner h3 {
    color: var(--primary-color);
  }
  div.inner p {
    line-height: 140%;
  }
  .card h2 {
    font-size: calc(36rem / 16);
  }
  .card h2,
  .card h3 {
    margin-top: 0;
    line-height: 110%;
  }
  a.card {
    text-decoration: none;
    color: inherit;
    height: 100%;
    transition: 0.25s;
    grid-column: span 2;
  }
</style>

